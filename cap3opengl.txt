OpenGL: vértices y shaders
===========================

Introducción
------------------------------------------------------
En el apartado anterior hemos visto que es necesario crear "programas separados" para poder acceder a la aceleración gráfica. En este capítulo veremos como compilar y enlazar estos programas para poder visualizar el resultado en pantalla. También veremos como OpenGL muestra los elementos en pantalla y como necesitaremos adaptarnos a su sistema de coordenadas.

En este capítulo crearemos una clase auxiliar llamada ``OpenGLHelper.java`` que podremos reutilizar el resto del tema.

Cargando shaders
------------------------------------------------------
En primer lugar necesitamos que nuestra clase ``OpenGLHelper.java`` disponga de un método que permita cargar recursos (en este caso nuestros mini-programas OpenGL) y dejarlos en un ``String``

El programa siguiente abre un fichero de recurso que habremos guardado (por ejemplo en ``res/opengl``
.. code-block:: java

	public class OpenGLHelper {
		public static String cargarFicheroPrograma(
					Context contexto, int idRecurso)
		{
			StringBuilder programa=
					new StringBuilder();
			try{
				Resources res=contexto.getResources();
				InputStream is=
						res.openRawResource(idRecurso);
				InputStreamReader isr=
						new InputStreamReader(is);
				BufferedReader bfr=
						new BufferedReader(isr);
				String linea;
				linea=bfr.readLine();
				while (linea!=null){
					programa.append(linea+"\n");
					linea=bfr.readLine();
				} //Fin del while
			} //Fin del try
			catch (IOException e){
				throw new RuntimeException(
					"No se pudo abrir el recurso "+
					"cuyo id era:"+idRecurso);
			} //Fin del catch IOException
			catch (Resources.NotFoundException nfe){
				throw new RuntimeException(
						"No se encontro el recurso "+
						"cuyo id era:"+idRecurso);
			}
			return programa.toString();
		} //Fin de cargarFicheroPrograma
	}
	